"""add_users_table

Revision ID: b13036087742
Revises:
Create Date: 2025-03-30 09:03:37.806692

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b13036087742"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("full_name", sa.String(length=100), nullable=True),
        sa.Column(
            "disabled",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="Whether user account is disabled",
        ),
        sa.Column(
            "scopes",
            sa.String(length=512),
            server_default="",
            nullable=False,
            comment="Space-separated list of access scopes",
        ),
        sa.Column(
            "is_oauth",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="True if user registered via OAuth provider",
        ),
        sa.Column(
            "oauth_provider",
            sa.String(length=50),
            nullable=True,
            comment="'yandex', 'google', etc.",
        ),
        sa.Column(
            "oauth_id",
            sa.String(length=256),
            nullable=True,
            comment="User ID from OAuth provider",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.func.now(),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.func.now(),
            server_onupdate=sa.func.now(),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
